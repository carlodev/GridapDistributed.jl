@techreport{petsc-user-ref,
  author = {Satish Balay and Shrirang Abhyankar and Mark~F. Adams and Steven Benson and Jed Brown
    and Peter Brune and Kris Buschelman and Emil Constantinescu and Lisandro Dalcin and Alp Dener
    and Victor Eijkhout and William~D. Gropp and V\'{a}clav Hapla and Tobin Isaac and Pierre Jolivet
    and Dmitry Karpeev and Dinesh Kaushik and Matthew~G. Knepley and Fande Kong and Scott Kruger
    and Dave~A. May and Lois Curfman McInnes and Richard Tran Mills and Lawrence Mitchell and Todd Munson
    and Jose~E. Roman and Karl Rupp and Patrick Sanan and Jason Sarich and Barry~F. Smith
    and Stefano Zampini and Hong Zhang and Hong Zhang and Junchao Zhang},
  title       = {{PETSc/TAO} Users Manual},
  institution = {Argonne National Laboratory},
  number      = {ANL-21/39 - Revision 3.16},
  year        = {2021},
}



@manual{mpi40,
    author = "{Message Passing Interface Forum}",
    title  = "{MPI}: A Message-Passing Interface Standard Version 4.0",
    url    = "https://www.mpi-forum.org/docs/mpi-4.0/mpi40-report.pdf",
    year   = 2021,
    month  = jun
}

@article{Verdugo:2021,
  	url = {https://arxiv.org/abs/2109.12818},
  	Archiveprefix = {arXiv},
  	Author = {{Verdugo}, F. and {Badia}, S.},
  	Eprint = {2109.12818},
  	Journal = {ArXiv e-prints},
  	Keywords = {Mathematical software},
  	Month = sep,
  	Title = {{The software design of Gridap: a Finite Element package based on the Julia JIT compiler}},
  	Year = 2021
}

@misc{gridapetsc,
  author = {Verdugo, F. and  Sande, V. and  Martin, A. F.},
  title = {GridapPETSc},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/gridap/GridapPETSc.jl}
}

@misc{gridap4est,
  author = {Martin, A. F.},
  title = {GridapP4est},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/gridap/GridapP4est.jl}
}

@misc{parrays,
  author = {Verdugo, F.},
  title = {PartitionedArrays},
  year = {2021},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/fverdugo/PartitionedArrays.jl}
}

@article{Bezanson2017,
abstract = {Bridging cultures that have often been distant, Julia combines expertise from the diverse fields of computer science and computational science to create a new approach to numerical computing. Julia...},
archivePrefix = {arXiv},
arxivId = {1411.1607},
author = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B.},
doi = {10.1137/141000671},
eprint = {1411.1607},
issn = {00361445},
journal = {http://dx.doi.org/10.1137/141000671},
keywords = {65Y05,68N15,97P40,Julia,numerical,parallel,scientific computing},
month = {feb},
number = {1},
pages = {65--98},
publisher = {Society for Industrial and Applied Mathematics},
title = {{Julia: A Fresh Approach to Numerical Computing}},
volume = {59},
year = {2017}
}
@article{Badia2020,
abstract = {Gridap is a new Finite Element (FE) framework, exclusively written in the Julia programming language, for the numerical simulation of a wide range of mathematical models governed by partial differential equations (PDEs). The library provides a feature-rich set of discretization techniques, including continuous and discontinuous FE methods with Lagrangian, Raviart-Thomas, or N{\'{e}}d{\'{e}}lec interpolations, and supports a wide range of problem types including linear, nonlinear, single-field, and multi-field PDEs (see (Badia, Mart{\'{i}}n, {\&} Principe, 2018, Section 3) for a detailed presentation of the mathematical abstractions behind the implementation of these FE methods). Gridap is designed to help application experts to easily simulate real-world problems, to help researchers improve productivity when developing new FE-related techniques, and also for its usage in numerical PDE courses. The main motivation behind Gridap is to find an improved balance between computational performance, user-experience, and work-flow productivity when working with FE libraries. Previous FE frameworks, e.g., FEniCS (Alnaes et al., 2015) or Deal.II (Bangerth, Hartmann, {\&} Kanschat, 2007) usually provides a high-level user front-end to facilitate the use of the library and a computational back-end to achieve performance. The user front-end is usually programmable in an interpreted language like Python, whereas the computational back-end is usually coded in a compiled language like C/C++ or Fortran. Users can benefit from the high-level front-end (i.e., for rapid prototyping) and simultaneously enjoy the performance of the compiled back-end. This approach reaches a compromise between performance and productivity when the back-end provides all the functionality required by the user. However, it does not satisfactorily address the needs of researchers on numerical methods willing to extend the library with new techniques or features. These extensions usually need to be done at the level of the computational back-end for performance reasons.},
author = {Badia, Santiago and Verdugo, Francesc},
doi = {10.21105/JOSS.02520},
file = {:home/amartin/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Badia, Verdugo - 2020 - Gridap An extensible Finite Element toolbox in Julia.pdf:pdf},
issn = {2475-9066},
journal = {Journal of Open Source Software},
month = {aug},
number = {52},
pages = {2520},
publisher = {The Open Journal},
title = {{Gridap: An extensible Finite Element toolbox in Julia}},
url = {https://joss.theoj.org/papers/10.21105/joss.02520},
volume = {5},
year = {2020}
}
@article{Badia2020a,
abstract = {In this work we formally derive and prove the correctness of the algorithms and data structures in a parallel, distributed-memory, generic finite element framework that supports {\$}h{\$}-adaptivity on c...},
archivePrefix = {arXiv},
arxivId = {1907.03709},
author = {Badia, Santiago and Mart{\'{i}}n, Alberto F. and Neiva, Eric and Verdugo, Francesc},
doi = {10.1137/20M1328786},
eprint = {1907.03709},
issn = {10957197},
journal = {https://doi.org/10.1137/20M1328786},
keywords = {65M50,65N30,65Y05,65Y20,adaptive mesh refinement,finite elements,forest of trees,parallel algorithms,partial differential equations,scientific software},
month = {dec},
number = {6},
pages = {C436--C468},
publisher = {Society for Industrial and Applied Mathematics},
title = {{A Generic Finite Element Framework on Parallel Tree-Based Adaptive Meshes}},
volume = {42},
year = {2020}
}
@article{Gibson2019,
address = {Cham},
author = {Gibson, Thomas H. and McRae, Andrew T.T. and Cotter, Colin J. and Mitchell, Lawrence and Ham, David A.},
doi = {10.1007/978-3-030-23957-2},
isbn = {978-3-030-23956-5},
publisher = {Springer International Publishing},
series = {Mathematics of Planet Earth},
title = {{Compatible Finite Element Methods for Geophysical Flows}},
url = {http://link.springer.com/10.1007/978-3-030-23957-2},
year = {2019}
}
@article{Rognes2013,
abstract = {Differential equations posed over immersed manifolds are of particular importance in studying geophysical flows; for instance, ocean and atmosphere simulations crucially rely on the capability to solve equations over the sphere. This paper presents the extension of the FEniCS software components to the automated solution of finite element formulations of differential equations defined over general, immersed manifolds. We describe the implementation and, in particular detail, how the required extensions essentially reduce to the extension of the FEniCS form compiler to cover this case. The resulting implementation has all the properties of the FEniCS pipeline and we demonstrate its flexibility by an extensive range of numerical examples covering a number of geophysical benchmark examples and test cases. The results are all in agreement with the expected values. The description here relates to DOLFIN/FEniCS 1.2.},
author = {Rognes, M. E. and Ham, D. A. and Cotter, C. J. and McRae, A. T.T.},
doi = {10.5194/GMD-6-2099-2013},
issn = {19919603},
journal = {Geoscientific Model Development},
month = {dec},
number = {6},
pages = {2099--2119},
publisher = {Copernicus GmbH},
title = {{Automating the solution of PDEs on the sphere and other manifolds in FEniCS 1.2}},
volume = {6},
year = {2013}
}
@article{Burstedde2011,
abstract = {We present scalable algorithms for parallel adaptive mesh refinement and coarsening (AMR), partitioning, and 2:1 balancing on computational domains composed of multiple connected two-dimensional qu...},
author = {Burstedde, Carsten and Wilcox, Lucas C. and Ghattas, Omar},
doi = {10.1137/100791634},
issn = {10648275},
journal = {http://dx.doi.org/10.1137/100791634},
keywords = {65D18,65M50,65Y05,68W10,Morton code,forest of octrees,large-scale scientific computing,parallel adaptive mesh refinement,scalable algorithms},
month = {may},
number = {3},
pages = {1103--1133},
publisher = {Society for Industrial and Applied Mathematics},
title = {{p4est: Scalable Algorithms for Parallel Adaptive Mesh Refinement on Forests of Octrees}},
volume = {33},
year = {2011}
}
@article{Ronchi1996,
abstract = {A new gridding technique for the solution of partial differential equations in spherical geometry is presented. The method is based on a decomposition of the sphere into six identical regions, obtained by projecting the sides of a circumscribed cube onto a spherical surface. By choosing the coordinate lines on each region to be arcs of great circles, one obtains six coordinate systems which are free of any singularity and define the same metric. Taking full advantage of the symmetry properties of the decomposition, a variation of the composite mesh finite difference method can be applied to couple the six grids and obtain, with a high degree of efficiency, very accurate numerical solutions of partial differential equations on the sphere. The advantages of this new technique over both spectral and uniform longitude-latitude grid point methods are discussed in the context of applications on serial and parallel architectures. We present results of two test cases for numerical approximations to the shallow water equations in spherical geometry: the linear advection of a cosine bell and the nonlinear evolution of a Rossby-Haurwitz wave. Performance analysis for this latter case indicates that the new method can provide, with substantial savings in execution times, numerical solutions which are as accurate as those obtainable with the spectral transform method. {\textcopyright} 1996 Academic Press, Inc.},
author = {Ronchi, C. and Iacono, R. and Paolucci, P. S.},
doi = {10.1006/JCPH.1996.0047},
issn = {0021-9991},
journal = {Journal of Computational Physics},
month = {mar},
number = {1},
pages = {93--114},
publisher = {Academic Press},
title = {{The “Cubed Sphere”: A New Method for the Solution of Partial Differential Equations in Spherical Geometry}},
volume = {124},
year = {1996}
}
@article{Galewsky2016,
abstract = {We present an initial-value problem for testing numerical models of the global shallow-water equations. This new test case is designed to address some of the difficulties that have recently been un...},
author = {Galewsky, Joseph and Scott, Richard K. and Polvani, Lorenzo M.},
doi = {10.3402/TELLUSA.V56I5.14436},
file = {:home/amartin/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Galewsky, Scott, Polvani - 2016 - An initial-value problem for testing numerical models of the global shallow-water equations.pdf:pdf},
journal = {http://dx.doi.org/10.3402/tellusa.v56i5.14436},
month = {jan},
number = {5},
pages = {429--440},
publisher = {Taylor {\&} Francis},
title = {{An initial-value problem for testing numerical models of the global shallow-water equations}},
url = {https://www.tandfonline.com/doi/abs/10.3402/tellusa.v56i5.14436},
volume = {56},
year = {2016}
}
